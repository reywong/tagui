<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yxtc.framework.platform.mapper.framework.RoleInfoMapper">
    <resultMap id="BaseResultMap" type="com.yxtc.framework.platform.pojo.framework.RoleInfo">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="rolename" property="rolename" jdbcType="VARCHAR"/>
        <result column="describes" property="describes" jdbcType="VARCHAR"/>
        <result column="add1" property="add1" jdbcType="VARCHAR"/>
        <result column="add2" property="add2" jdbcType="VARCHAR"/>
        <result column="state" property="state" jdbcType="VARCHAR"/>
        <result column="createdatetime" property="createdatetime" jdbcType="VARCHAR"/>
        <result column="updatedatetime" property="updatedatetime" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, rolename, describes, add1, add2, state, createdatetime, updatedatetime
  </sql>

    <!--查询-->
    <select id="selectByRole" resultType="com.yxtc.framework.platform.pojo.framework.RoleInfo" parameterType="com.yxtc.framework.platform.pojo.framework.RoleInfo">
        select
        <include refid="Base_Column_List"/>
        from yxtc_framework_roleinfo
        where state='1'
        <if test="rolename!=null and rolename!=''">
            and rolename  like CONCAT('%','${rolename}','%' )
        </if>

        <if test="startNum!=null">
            limit ${startNum},${rows}
        </if>

    </select>
    <!--查询最大记录条数-->
    <select id="selectMaxNum" resultType="int" parameterType="com.yxtc.framework.platform.pojo.framework.RoleInfo">
        select
        count(1) as total
        from yxtc_framework_roleinfo where state='1'
        <if test="rolename!=null and rolename!=''">
           and  rolename  like CONCAT('%','${rolename}','%' )
        </if>


    </select>

    <!--主键查询-->
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from yxtc_framework_roleinfo
        where id = #{id,jdbcType=INTEGER}
    </select>


    <!---->
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
      update yxtc_framework_roleinfo set state='0' where id = #{id,jdbcType=INTEGER}
   </delete>


    <insert id="insert" parameterType="com.yxtc.framework.platform.pojo.framework.RoleInfo">
    insert into yxtc_framework_roleinfo (id, rolename, describes, 
      add1, add2, state, 
      createdatetime, updatedatetime)
    values (#{id,jdbcType=INTEGER}, #{rolename,jdbcType=VARCHAR}, #{describes,jdbcType=VARCHAR}, 
      #{add1,jdbcType=VARCHAR}, #{add2,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR}, 
      #{createdatetime,jdbcType=VARCHAR}, #{updatedatetime,jdbcType=VARCHAR})
  </insert>

    <insert id="insertSelective" parameterType="com.yxtc.framework.platform.pojo.framework.RoleInfo">
        insert into yxtc_framework_roleinfo
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="rolename != null">
                rolename,
            </if>
            <if test="describes != null">
                describes,
            </if>
            <if test="add1 != null">
                add1,
            </if>
            <if test="add2 != null">
                add2,
            </if>
            <if test="state != null">
                state,
            </if>
            <if test="createdatetime != null">
                createdatetime,
            </if>
            <if test="updatedatetime != null">
                updatedatetime,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="rolename != null">
                #{rolename,jdbcType=VARCHAR},
            </if>
            <if test="describes != null">
                #{describes,jdbcType=VARCHAR},
            </if>
            <if test="add1 != null">
                #{add1,jdbcType=VARCHAR},
            </if>
            <if test="add2 != null">
                #{add2,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                #{state,jdbcType=VARCHAR},
            </if>
            <if test="createdatetime != null">
                #{createdatetime,jdbcType=VARCHAR},
            </if>
            <if test="updatedatetime != null">
                #{updatedatetime,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.yxtc.framework.platform.pojo.framework.RoleInfo">
        update yxtc_framework_roleinfo
        <set>
            <if test="rolename != null">
                rolename = #{rolename,jdbcType=VARCHAR},
            </if>
            <if test="describes != null">
                describes = #{describes,jdbcType=VARCHAR},
            </if>
            <if test="add1 != null">
                add1 = #{add1,jdbcType=VARCHAR},
            </if>
            <if test="add2 != null">
                add2 = #{add2,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                state = #{state,jdbcType=VARCHAR},
            </if>
            <if test="createdatetime != null">
                createdatetime = #{createdatetime,jdbcType=VARCHAR},
            </if>
            <if test="updatedatetime != null">
                updatedatetime = #{updatedatetime,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.yxtc.framework.platform.pojo.framework.RoleInfo">
    update yxtc_framework_roleinfo
    set rolename = #{rolename,jdbcType=VARCHAR},
      describes = #{describes,jdbcType=VARCHAR},
      add1 = #{add1,jdbcType=VARCHAR},
      add2 = #{add2,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR},
      createdatetime = #{createdatetime,jdbcType=VARCHAR},
      updatedatetime = #{updatedatetime,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

</mapper>